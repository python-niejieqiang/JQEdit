["import sys\nfrom PySide6.QtWidgets import QApplication, QTextEdit\nfrom PySide6.QtGui import QFontDatabase, QFont, QTextCharFormat\n\nclass CustomTextEdit(QTextEdit):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 加载自定义字体（如果字体不在系统字体库中）\n        font_id_monaco = QFontDatabase.addApplicationFont(\"path/to/Monaco.ttf\")\n        font_id_msyh = QFontDatabase.addApplicationFont(\"path/to/msyh.ttf\")  # 微软雅黑字体路径\n        \n        if font_id_monaco == -1 or font_id_msyh == -1:\n            print(\"Failed to load fonts.\")\n            return\n        \n        # 获取字体家族名称\n        monaco_family = QFontDatabase.applicationFontFamilies(font_id_monaco)[0]\n        msyh_family = QFontDatabase.applicationFontFamilies(font_id_msyh)[0]\n        \n        # 设置默认字体为 Monaco\n        default_font = QFont(monaco_family)\n        self.setFont(default_font)\n        \n        # 设置文本格式，使得中文字符使用微软雅黑\n        format = QTextCharFormat()\n        format.setFontFamily(msyh_family)\n        self.setCurrentCharFormat(format)\n        \n        # 重写键盘输入事件，根据字符类别动态切换字体\n        self.textChanged.connect(self.on_text_changed)\n\n    def on_text_changed(self):\n        cursor = self.textCursor()\n        block = cursor.block()\n        fmt = QTextBlockFormat()\n        \n        for i in range(block.position(), block.position() + block.length()):\n            char = self.toPlainText()[i]\n            if '\\u4e00' <= char <= '\\u9fff':  # 判断是否为中文字符\n                fmt.setFontFamily(\"微软雅黑\")\n            else:\n                fmt.setFontFamily(\"Monaco\")\n            cursor.setPosition(i)\n            cursor.setBlockFormat(fmt)\n            cursor.movePosition(QTextCursor.NextCharacter)\n        self.setTextCursor(cursor)\n\napp = QApplication(sys.argv)\ntext_edit = CustomTextEdit()\ntext_edit.show()\nsys.exit(app.exec())", "rgb(162, 222, 255)", "#a2deff", "python --version > nul 2>&1\nIF %ERRORLEVEL% NEQ 0 (\n    echo Python 未安装，请先安装 Python。\n    pause\n    exit /b"]